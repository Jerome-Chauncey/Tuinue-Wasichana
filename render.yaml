# render.yaml

databases:
  - name: wasichana-db
    region: oregon
    plan: free
    databaseName: wasichana
    user: dbadmin

services:
  - type: web
    name: Tuinue-Wasichana-API
    env: python
    region: oregon
    plan: free
    branch: main
    rootDir: .
    buildCommand: |
      pip install --upgrade pip
      pip install python-dotenv gunicorn
      pip install -r requirements.txt
      export FLASK_APP=backend/config.py
      # Reset migrations to avoid version conflicts
      rm -rf migrations/
      flask db init
      flask db migrate -m "initial migration"
      flask db upgrade
      # Seed the database with proper PYTHONPATH
      PYTHONPATH=/opt/render/project/src python backend/seed.py
    startCommand: |
      PYTHONPATH=/opt/render/project/src gunicorn --bind 0.0.0.0:$PORT backend.app:app
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: wasichana-db
          property: connectionString
      - key: FLASK_SECRET_KEY
        value: 460afb43de33e919e8b02b35ed4c3e4465ec8c0fb3b7a5fe15f861b3278515c5
      - key: JWT_SECRET_KEY
        value: 392832fc3fe988535d689bcdb93c49581983f7d2ae0881238a269ceb4d18fe84
      - key: FLASK_ENV
        value: production
      - key: UPLOAD_FOLDER
        value: ./uploads

  - type: web
    name: Tuinue-Wasichana-UI
    env: node
    region: oregon
    plan: free
    branch: main
    rootDir: frontend
    buildCommand: |
      echo "20" > .nvmrc
      npm install
      npm run build
    startCommand: |
      npm run preview -- --host 0.0.0.0 --port $PORT
    envVars:
      - key: VITE_API_BASE_URL
        value: https://tuinue-wasichana-api.onrender.com
